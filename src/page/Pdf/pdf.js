import React, { useState } from 'react';
import './pdf.css';
import { useLocation, useNavigate } from 'react-router-dom';
import Menu from '@mui/material/Menu';
import MenuItem from '@mui/material/MenuItem';
import { Document, Page } from 'react-pdf';
import { QA } from '../../pdfs/QA';
import { pdfjs } from 'react-pdf';
import { checkup } from './../../pdfs/checkup';
import { Qualifications } from './../../pdfs/Qualifications';
import { soldierBranch } from './../../pdfs/soldierBranch';
import {form} from '../../pdfs/form';
import ContactDetails from '../../component/ContactDetails';
import { exam } from './../../pdfs/exam';


pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;

function PDFPage() {
    const navigate = useNavigate();
    const [anchorEl, setAnchorEl] = useState(null);
    const [numPages, setNumPages] = useState(null);
  const [pageNumber, setPageNumber] = useState(1); //setting 1 to show fisrt page


    const location = useLocation();
    const header = location.state?.header || "‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô";
    const pdfName = location.state?.pdfName || "default";
    const pdfMapping = {
        'QA': QA,
        'checkup': checkup,
        'Qualifications': Qualifications,
        'soldierBranch': soldierBranch,
        'form': form,
        'exam': exam
        
    };
    function changePage(offset) {
        setPageNumber(prevPageNumber => prevPageNumber + offset);
      }
    
      function previousPage() {
        changePage(-1);
      }
    
      function nextPage() {
        changePage(1);
      }

    const handleMenuOpen = (event) => {
        setAnchorEl(event.currentTarget);
    };

    const handleMenuClose = () => {
        setAnchorEl(null);
    };

const navigateToPDFPage = (header, pdfName) => {
    navigate('/page', { state: { header, pdfName } }); // Send both header and pdfName
    handleMenuClose();
};

    const home = () => {
        navigate('/');
    };

    const onDocumentLoadSuccess = ({ numPages }) => {
        setNumPages(numPages);
    }

    return (
        <div className="pdf-page-container">
            <div className="navigation-bar">
            <span>{header}</span>
                <button className="download-btn">DOWNLOAD</button>
                <div className="icons">
                    <span>üîç</span>  {/* Magnifying glass icon */}
                    <span onClick={home}>üè†</span>  {/* Home icon */}
                    <span onClick={handleMenuOpen}>
                        ‚ò∞
                    </span>
                    <Menu 
                        id="basic-menu"
                        anchorEl={anchorEl}
                        open={Boolean(anchorEl)}
                        onClose={handleMenuClose}
                        MenuListProps={{
                            'aria-labelledby': 'basic-button',
                        }}
                    >

                            <MenuItem value={'‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å'} onClick={() => navigateToPDFPage('‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å')}>‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</MenuItem>
                            <MenuItem value={'‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£'} onClick={() => navigateToPDFPage('‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£','form')}>‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</MenuItem>
                            <MenuItem value={'‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£'} onClick={() => navigateToPDFPage('‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£','Qualifications')}>‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£</MenuItem>
                            <MenuItem value={'‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ó‡∏´‡∏≤‡∏£'} onClick={() => navigateToPDFPage('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ó‡∏´‡∏≤‡∏£','soldierBranch')}>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ó‡∏´‡∏≤‡∏£</MenuItem>
                            <MenuItem value={'‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö'} onClick={() => navigateToPDFPage('‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö','exam')}>‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö</MenuItem>
                            <MenuItem value={'‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå'} onClick={() => navigateToPDFPage('‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå','checkup')}>‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå</MenuItem>
                            <MenuItem value={'‡∏ñ‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏™‡∏≤‡∏£‡∏û‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤'} onClick={() => navigateToPDFPage('‡∏ñ‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏™‡∏≤‡∏£‡∏û‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤','QA')}>‡∏ñ‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏™‡∏≤‡∏£‡∏û‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤</MenuItem>
                            <MenuItem value={'‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤'} onClick={() => navigateToPDFPage('‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤','contract')}>‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤</MenuItem>
                        
                    </Menu>{/* Menu icon */}
                </div>
            </div>
            <div className="pdf-viewer container-fluid">
            {pdfName === 'contract' ? (
        <ContactDetails />
    ) : (
        <>
            <div className="row justify-content-center">
                <div className="col-md-8">
                    <Document
                        file={pdfMapping[pdfName]}
                        onLoadSuccess={onDocumentLoadSuccess}
                    >
                        <Page wrap={true} renderTextLayer={false} renderAnnotationLayer={false} scale={9.0} pageNumber={pageNumber} />
                    </Document>
                </div>
            </div>
            <div className="row justify-content-center">
                <div className="col-md-8 text-center">
                    <p>
                        Page {pageNumber || (numPages ? 1 : "--")} of {numPages || "--"}
                    </p>
                    <button type="button" disabled={pageNumber <= 1} onClick={previousPage}>
                        Previous
                    </button>
                    <button
                        type="button"
                        disabled={pageNumber >= numPages}
                        onClick={nextPage}
                    >
                        Next
                    </button>
                </div>
            </div>
        </>
    )}
</div>
</div>
    );
}

export default PDFPage;